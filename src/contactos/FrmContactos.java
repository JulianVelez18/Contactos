
package contactos;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ktark
 */
public class FrmContactos extends javax.swing.JFrame {

        private Lista lista;
    
    public FrmContactos() {
        initComponents();

        lista = new Lista();

        String nombreArchivo = System.getProperty("user.dir")
                + "/src/Datos/Datos.txt";

        lista.desdeArchivo(nombreArchivo);
        lista.mostrar(tblContactos);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContactos = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Agregar.gif"))); // NOI18N
        btnAgregar.setToolTipText(" Agregar Contacto");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Eliminar.gif"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar Contacto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Guardar.gif"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnOrdenar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Ordenar.gif"))); // NOI18N
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        tblContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Telefono", "Dirección", "Correo"
            }
        ));
        jScrollPane1.setViewportView(tblContactos);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Modificar.gif"))); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactos/iconos/Buscar.gif"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOrdenar)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Nodo n = new Nodo();
        lista.agregar(n);
        lista.mostrar(tblContactos);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        lista.ordenar();
        lista.mostrar(tblContactos);
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombreArchivo = System.getProperty("user.dir") + "/src/Datos/Datos.txt";
        if(lista.guardar(nombreArchivo)){
            JOptionPane.showMessageDialog(null, "Los datos se guardaron con exito");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se pudo guardar los datos");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tblContactos.getSelectedRow() >= 0) {
            lista.eliminar(lista.getNodo(tblContactos.getSelectedRow()));
            lista.mostrar(tblContactos);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un contactos");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (tblContactos.getSelectedRow() >= 0) {
            // Obtener el nodo seleccionado
            Nodo nodoSeleccionado = lista.getNodo(tblContactos.getSelectedRow());

            // Mostrar un cuadro de diálogo para que el usuario ingrese los nuevos datos
            String nuevoNombre = JOptionPane.showInputDialog(null, "Ingrese el nuevo nombre:", nodoSeleccionado.getNombre());
            String nuevoTelefono = JOptionPane.showInputDialog(null, "Ingrese el nuevo teléfono:", nodoSeleccionado.getTelefono());
            String nuevoCelular = JOptionPane.showInputDialog(null, "Ingrese el nuevo celular:", nodoSeleccionado.getCelular());
            String nuevaDireccion = JOptionPane.showInputDialog(null, "Ingrese la nueva dirección:", nodoSeleccionado.getDireccion());
            String nuevoCorreo = JOptionPane.showInputDialog(null, "Ingrese el nuevo correo:", nodoSeleccionado.getCorreo());

            // Actualizar los datos del nodo seleccionado
            nodoSeleccionado.actualizar(nuevoNombre, nuevoTelefono, nuevoCelular, nuevaDireccion, nuevoCorreo);

            // Volver a mostrar la lista con los datos actualizados
            lista.mostrar(tblContactos);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un contacto");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String criterio = JOptionPane.showInputDialog(null, "Ingrese el criterio de búsqueda (nombre, teléfono, etc.):");
        if (criterio != null && !criterio.isEmpty()) {
            // Crear una nueva lista para almacenar los resultados de la búsqueda
            Lista listaResultados = new Lista();
            // Recorrer la lista de contactos y buscar por el criterio ingresado
            Nodo apuntador = lista.getCabeza(); // Utilizar el método getCabeza() para obtener la cabeza de la lista
            while (apuntador != null) {
                // Comparar el criterio de búsqueda con los detalles de cada contacto
                if (apuntador.nombre.toLowerCase().contains(criterio.toLowerCase()) ||
                    apuntador.telefono.toLowerCase().contains(criterio.toLowerCase()) ||
                    apuntador.celular.toLowerCase().contains(criterio.toLowerCase()) ||
                    apuntador.direccion.toLowerCase().contains(criterio.toLowerCase()) ||
                    apuntador.correo.toLowerCase().contains(criterio.toLowerCase())) {
                    // Si se encuentra un contacto que coincide, agregarlo a la lista de resultados
                    listaResultados.agregar(new Nodo(apuntador.nombre, apuntador.telefono, apuntador.celular, apuntador.direccion, apuntador.correo));
                }
                apuntador = apuntador.siguiente;
            }
            // Mostrar los resultados de la búsqueda en una nueva tabla
            listaResultados.mostrar(tblContactos);
            if (listaResultados.getCabeza() == null) {
                JOptionPane.showMessageDialog(null, "No se encontraron resultados para el criterio de búsqueda.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar un criterio de búsqueda.");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmContactos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblContactos;
    // End of variables declaration//GEN-END:variables
}
